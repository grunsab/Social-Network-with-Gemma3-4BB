name: Python Flask and React CI

on:
  push:
    branches: [ main ] # Adjust if your main branch is named differently (e.g., master)
  pull_request:
    branches: [ main ] # Adjust if your main branch is named differently

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9',]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Backend (Python/Flask) Steps
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # TODO: Verify and set your project's Python version
        cache: 'pip' # Optional: Caches pip dependencies to speed up future builds

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend tests (pytest)
      run: pytest

  frontend-tests:
    runs-on: ubuntu-latest
    needs: backend-tests # Only run if backend tests pass
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Setup Python for backend
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'

    # Setup Node.js for frontend
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18' # Use LTS version
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    # Install and start backend
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start backend server
      run: |
        export FLASK_APP=app.py
        export FLASK_ENV=development
        export SECRET_KEY=test-secret-key
        python app.py &
      env:
        DATABASE_URL: sqlite:///test.db

    - name: Wait for backend to be ready
      run: |
        for i in {1..30}; do
          if curl -f http://localhost:5001/api/v1/categories; then
            echo "Backend is ready"
            break
          fi
          echo "Waiting for backend... ($i/30)"
          sleep 2
        done

    # Frontend steps
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Start frontend dev server
      working-directory: ./frontend
      run: |
        npm run dev &
        sleep 5

    - name: Wait for frontend to be ready
      run: |
        for i in {1..30}; do
          if curl -f http://localhost:5173; then
            echo "Frontend is ready"
            break
          fi
          echo "Waiting for frontend... ($i/30)"
          sleep 2
        done

    # Run Cypress tests
    - name: Run Cypress tests
      uses: cypress-io/github-action@v6
      with:
        working-directory: ./frontend
        wait-on: 'http://localhost:5173'
        wait-on-timeout: 120
        browser: chrome
        spec: |
          cypress/e2e/auth.cy.js
          cypress/e2e/category.cy.js
          cypress/e2e/feed.cy.js
          cypress/e2e/invites.cy.js
          cypress/e2e/posts.cy.js
      env:
        CYPRESS_baseUrl: http://localhost:5173

    # Upload screenshots if tests fail
    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: frontend/cypress/screenshots

    # Upload videos always
    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos
        path: frontend/cypress/videos
