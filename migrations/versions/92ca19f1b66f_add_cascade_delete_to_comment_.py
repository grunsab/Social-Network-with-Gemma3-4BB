"""Add cascade delete to comment-notification relationship

Revision ID: 92ca19f1b66f
Revises: c6f29cf38014
Create Date: 2025-05-07 21:28:47.333547

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '92ca19f1b66f'
down_revision = 'c6f29cf38014'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notification', schema=None) as batch_op:
        # For SQLite, batch_alter_table reconstructs the table.
        # We define the foreign key as it should exist on the new table.
        # Any existing FK on 'comment_id' will be replaced by this new definition
        # during the table reconstruction. We give the new constraint an explicit name.
        batch_op.create_foreign_key(
            'fk_notification_comment_id_comment_cascade',  # Explicit name for the new constraint
            'comment',
            ['comment_id'],
            ['id'],
            ondelete='CASCADE'
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notification', schema=None) as batch_op:
        # Drop the constraint with cascade that was added in upgrade.
        batch_op.drop_constraint('fk_notification_comment_id_comment_cascade', type_='foreignkey')
        # Re-create a foreign key without cascade, using a conventional name.
        # This assumes the original state was a foreign key without ON DELETE CASCADE.
        batch_op.create_foreign_key(
            'fk_notification_comment_id_comment', # Conventional name for non-cascade version
            'comment',
            ['comment_id'],
            ['id']
            # No 'ondelete' means no cascade by default for the FK
        )
    # ### end Alembic commands ###
