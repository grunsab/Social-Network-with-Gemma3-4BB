"""add report system, user types, and comment visibility

Revision ID: 368efc70cad6
Revises: 5a687c4bd593
Create Date: 2025-05-06 08:48:09.362432

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '368efc70cad6'
down_revision = '5a687c4bd593'
branch_labels = None
depends_on = None

# Define ENUM types for explicit creation/dropping for PostgreSQL
comment_visibility_enum = sa.Enum('PUBLIC', 'FRIENDS_ONLY', 'HIDDEN', name='commentvisibility')
user_type_enum = sa.Enum('USER', 'ADMIN', name='usertype')
report_content_type_enum = sa.Enum('POST', 'COMMENT', 'AMPERSOUND', name='reportcontenttype')
report_status_enum = sa.Enum('PENDING', 'RESOLVED_AUTO', 'RESOLVED_MANUAL', 'DISMISSED', name='reportstatus')

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create ENUM types for PostgreSQL if they don't exist
    comment_visibility_enum.create(op.get_bind(), checkfirst=True)
    user_type_enum.create(op.get_bind(), checkfirst=True)
    report_content_type_enum.create(op.get_bind(), checkfirst=True)
    report_status_enum.create(op.get_bind(), checkfirst=True)

    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.Column('reported_user_id', sa.Integer(), nullable=False),
    sa.Column('content_type', report_content_type_enum, nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('status', report_status_enum, server_default='PENDING', nullable=False),
    sa.ForeignKeyConstraint(['reported_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reporter_id', 'content_type', 'content_id', name='uq_report_once_per_content')
    )
    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_report_timestamp'), ['timestamp'], unique=False)

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('visibility', comment_visibility_enum, nullable=True))
    
    op.execute("UPDATE comment SET visibility = 'PUBLIC' WHERE visibility IS NULL")
    
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.alter_column('visibility', existing_type=comment_visibility_enum, nullable=False, server_default='PUBLIC')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_type', user_type_enum, nullable=True))

    op.execute("UPDATE \"user\" SET user_type = 'USER' WHERE user_type IS NULL")
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('user_type', existing_type=user_type_enum, nullable=False, server_default='USER')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('user_type')

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_column('visibility')

    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_report_timestamp'))

    op.drop_table('report')

    # Drop ENUM types for PostgreSQL
    comment_visibility_enum.drop(op.get_bind(), checkfirst=True)
    user_type_enum.drop(op.get_bind(), checkfirst=True)
    report_content_type_enum.drop(op.get_bind(), checkfirst=True)
    report_status_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
