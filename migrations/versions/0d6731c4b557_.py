"""empty message

Revision ID: 0d6731c4b557
Revises: 
Create Date: 2025-05-01 15:19:56.065057

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0d6731c4b557'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('invites_left', sa.Integer(), nullable=False),
    sa.Column('used_invite_code', sa.String(length=36), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('invite_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=36), nullable=False),
    sa.Column('issuer_id', sa.Integer(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('used_by_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['issuer_id'], ['user.id'], name='fk_invite_code_issuer_id_user'),
    sa.ForeignKeyConstraint(['used_by_id'], ['user.id'], name='fk_invite_code_used_by_id_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(length=512), nullable=True),
    sa.Column('image_classification', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_post_user_id_user'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_timestamp'), ['timestamp'], unique=False)

    op.create_table('user_interest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_user_interest_user_id_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'category', name='uq_user_category')
    )
    with op.batch_alter_table('user_interest', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_interest_category'), ['category'], unique=False)

    op.create_table('post_category_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('post_category_score', schema=None) as batch_op:
        batch_op.create_foreign_key(
            'fk_post_category_score_post_id',
            'post',
            ['post_id'],
            ['id']
        )
        batch_op.create_unique_constraint('uq_post_category_score', ['post_id', 'category'])
        batch_op.create_index(batch_op.f('ix_post_category_score_category'), ['category'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('post_category_score', schema=None) as batch_op:
        batch_op.drop_constraint('fk_post_category_score_post_id', type_='foreignkey')
        batch_op.drop_constraint('uq_post_category_score', type_='unique')
        batch_op.drop_index(batch_op.f('ix_post_category_score_category'))

    op.drop_table('post_category_score')
    with op.batch_alter_table('user_interest', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_interest_category'))

    op.drop_table('user_interest')
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_timestamp'))

    op.drop_table('post')
    op.drop_table('invite_code')
    op.drop_table('user')
    # ### end Alembic commands ###
